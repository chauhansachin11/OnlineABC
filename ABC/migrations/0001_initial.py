# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-05-07 09:33
from __future__ import unicode_literals

import ABC.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='addNewBooks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateOfRequest', models.DateField()),
                ('requestFile', models.FileField(upload_to=ABC.models.user_directory_path)),
                ('requestStatus', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='bookComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.CharField(default='', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='bookReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ratings', models.FloatField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='books',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookName', models.CharField(default='', max_length=100)),
                ('bookISBNcode', models.CharField(default='', max_length=100)),
                ('bookPublication', models.CharField(default='', max_length=100)),
                ('bookAuthor', models.CharField(default='', max_length=100)),
                ('bookEdition', models.IntegerField(default=0, max_length=2)),
                ('bookPrice', models.FloatField(blank=True, default=None, null=True)),
                ('bookImage', models.ImageField(default='images/logo1.png', upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='bookType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='cardDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardNumber', models.CharField(default=0, max_length=16)),
                ('cvv', models.IntegerField(default=0, max_length=3)),
                ('expiryDate', models.CharField(default='', max_length=10)),
                ('cardName', models.CharField(default='', max_length=50)),
                ('bankName', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stream', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='courseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseName', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customerName', models.CharField(default='', max_length=100)),
                ('customerUserName', models.CharField(default='', max_length=100)),
                ('customerEmailID', models.EmailField(default='', max_length=100)),
                ('password', models.CharField(default='', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='customerComplaint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateOfComplaint', models.DateField()),
                ('complaintStatus', models.CharField(default='', max_length=100)),
                ('desc', models.TextField()),
                ('image', models.ImageField(upload_to='complaints/')),
            ],
        ),
        migrations.CreateModel(
            name='customerContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customerPhone', models.CharField(default='0', max_length=10)),
                ('customerAddress', models.CharField(default='', max_length=200)),
                ('customerPincode', models.IntegerField(default=0, max_length=6)),
                ('customerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custID', to='ABC.customer')),
            ],
        ),
        migrations.CreateModel(
            name='customerOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='', max_length=20)),
                ('dateOfOrder', models.DateField()),
                ('dateOfDelivery', models.DateField()),
                ('deliveredDate', models.DateField()),
                ('quantity', models.IntegerField(default=0)),
                ('totalPrice', models.FloatField(default=None)),
                ('bookSeqID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookSeqID', to='ABC.books')),
                ('customerSeqID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customerSeqID', to='ABC.customer')),
            ],
        ),
        migrations.CreateModel(
            name='customerPayments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentMethod', models.CharField(default=None, max_length=100)),
                ('phoneNumber', models.CharField(default='0', max_length=10)),
                ('customerNo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customerNo', to='ABC.customer')),
                ('detailID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detailID', to='ABC.cardDetails')),
            ],
        ),
        migrations.CreateModel(
            name='deliveryBoy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(default='', max_length=400)),
                ('deliveryBoyName', models.CharField(default='', max_length=100)),
                ('adhaarNumber', models.IntegerField(default=0)),
                ('priMobileNumber', models.IntegerField(default=0)),
                ('secMobileNumber', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='novelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('novelType', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='orderTracking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderStatus', models.CharField(default='', max_length=400)),
                ('statusDate', models.DateField()),
                ('deliveryBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveryBy', to='ABC.deliveryBoy')),
                ('orderNo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderNo', to='ABC.customerOrder')),
            ],
        ),
        migrations.CreateModel(
            name='refBooks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='retailer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopID', models.IntegerField(default=0)),
                ('shopName', models.CharField(default='', max_length=100)),
                ('shopAddress', models.CharField(default='', max_length=200)),
                ('shopPincode', models.IntegerField(default=0, max_length=6)),
                ('retailerEmailID', models.EmailField(default='', max_length=100)),
                ('retailerPriPhone', models.CharField(default='0', max_length=10)),
                ('retailerSecPhone', models.CharField(default='0', max_length=10)),
                ('retailerPassword', models.CharField(default='', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='textBooks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.IntegerField(default=0)),
                ('courseID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseID', to='ABC.course')),
            ],
        ),
        migrations.CreateModel(
            name='wishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookId', to='ABC.books')),
                ('customersId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customersId', to='ABC.customer')),
            ],
        ),
        migrations.CreateModel(
            name='year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=0, max_length=1)),
                ('semester', models.IntegerField(default=0, max_length=1)),
            ],
        ),
        migrations.AddField(
            model_name='refbooks',
            name='subjectNo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjectNo', to='ABC.subject'),
        ),
        migrations.AddField(
            model_name='coursetype',
            name='YearID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yearID', to='ABC.year'),
        ),
        migrations.AddField(
            model_name='course',
            name='courseTypeID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseTypeID', to='ABC.courseType'),
        ),
        migrations.AddField(
            model_name='course',
            name='subjectID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjectID', to='ABC.subject'),
        ),
        migrations.AddField(
            model_name='carddetails',
            name='customercardID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custcardID', to='ABC.customer'),
        ),
        migrations.AddField(
            model_name='booktype',
            name='typeName',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ABC.novelType'),
        ),
        migrations.AddField(
            model_name='books',
            name='bookRetailer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookretailer', to='ABC.retailer'),
        ),
        migrations.AddField(
            model_name='books',
            name='bookTypeID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookTypeID', to='ABC.bookType'),
        ),
        migrations.AddField(
            model_name='bookreview',
            name='booksID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booksID', to='ABC.books'),
        ),
        migrations.AddField(
            model_name='bookcomments',
            name='booksId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booksId', to='ABC.books'),
        ),
        migrations.AddField(
            model_name='bookcomments',
            name='customerId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customerId', to='ABC.customer'),
        ),
        migrations.AddField(
            model_name='addnewbooks',
            name='retailerID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retailerID', to='ABC.retailer'),
        ),
        migrations.AlterUniqueTogether(
            name='wishlist',
            unique_together=set([('bookId', 'customersId')]),
        ),
        migrations.AlterUniqueTogether(
            name='customerpayments',
            unique_together=set([('detailID', 'customerNo')]),
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together=set([('courseTypeID', 'subjectID')]),
        ),
        migrations.AlterUniqueTogether(
            name='bookcomments',
            unique_together=set([('booksId', 'customerId')]),
        ),
    ]
